# Dart version 2.16.1/2.18.0
# Flutter version 2.10.3/3.3.0

name: Release Workflow

on:
  workflow_call:
    inputs:
      message:
        required: true
        type: string

jobs:
  runFlutter:
    strategy:
      matrix:
        #flutterVersion: [2.10.3, 3.3.0]
        flutterVersion: [3.3.0]
        #dartVersion: [2.16.1, 2.18.0]
        dartVersion: [2.17.0]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
          token: ${{ secrets.CICD_GITHUB_TOKEN }}
      
      # - name: Checkout flutter/tests GitHub repo
      #   uses: actions/checkout@v3
      #   with:
      #     repository: 'flutter/tests'
      #     path: flutter-tests
      #     token: ${{ secrets.CICD_GITHUB_TOKEN }}
      
      # - name: Check Flutter-tests
      #   run: |
      #     ls -l flutter-tests/*
      
      # - name: Checkout fzyzcjy/flutter_convenient_test GitHub repo
      #   uses: actions/checkout@v3
      #   with:
      #     repository: 'fzyzcjy/flutter_convenient_test'
      #     path: flutter-convenient-test
      #     token: ${{ secrets.CICD_GITHUB_TOKEN }}
      
      # - name: Check Flutter convenient-test
      #   run: |
      #     ls -l flutter-convenient-test/*

      - name: Install Ubuntu deps
        run: |
          sudo apt-get update
          sudo apt-get install jq
          sudo pip install yq
      
      - name: Setup Variables
        shell: bash
        run: |
          echo '::set-output name=action_echo::disabled'
          echo "Actor: $GITHUB_ACTOR"
          echo '::set-output name=action_echo::enabled'

          echo "RELEASE_VERSION=$(yq -r .version pubspec.yaml)" >> $GITHUB_ENV

      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: ${{ matrix.dartVersion }}

      - name: Setup Flutter - ${{ matrix.flutterVersion }}
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.flutterVersion }}
      
      - name: Setup Gradle ${{ matrix.gradleVersion }}
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: ${{ matrix.gradleVersion }}
      
      - name: Run Flutter Linter
        run: flutter analyze
      
      # - name: Run Flutter tests
      #   run: |
      #     cd flutter-tests
      #     flutter pub get
      #     flutter test registry/*.test
      #     cd ${{ github.workspace }}
      
      # - name: Run Flutter convenient-test
      #   run: |
      #     cd flutter-convenient-test/packages
      #     WORK_DIR=$(pwd)
      #     export dir_list=( $(ls -d */ | tr -d '/') )
      #     for directory in "${dir_list[@]}"; do
      #       cd "${WORK_DIR}/${directory}"
      #       flutter pub get
      #       cd test
      #       flutter test *.*
      #       cd "${WORK_DIR}"
      #     done
      #     cd ${{ github.workspace }}
      
      # - name: Install Flutter dependencies - ${{ matrix.flutterVersion }}
      #   run: |
      #     flutter packages get
      #     flutter pub get

      # - name: Build APK
      #   run: |
      #     flutter build apk

      # - name: Build IPA
      #   run: |
      #     flutter build ipa

      # - name: Upload IPA artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: sofiqe
      #     path: build/ios/ipa/*.ipa
      
      - name: Setup new version
        shell: bash
        run: |
          # Split the release version
          SEMANTIC_VERSION=( ${RELEASE_VERSION//./ } )
          major=${SEMANTIC_VERSION[0]}
          minor=${SEMANTIC_VERSION[1]}
          patch=${SEMANTIC_VERSION[2]}

          minor=$(( minor + 1 ))
          if [[ ${minor} -eq 100 ]]; then
            major=$(( major + 1 ))
            minor=0
          fi

          echo "DEVELOP_VERSION=${major}.${minor}.${patch}" >> $GITHUB_ENV
          echo "Next development version set to: ${DEVELOP_VERSION}"
      
      - name: Setup Git
        shell: bash
        run: |
          git config user.name "CiCd"
          git config user.email "<ci-bot@conqorde.com>"
      
      - name: Release service
        shell: bash
        run: |
          # Set the next development version
          echo "Release Version: ${RELEASE_VERSION}"
          echo "Develop Version: ${DEVELOP_VERSION}"

          git clean -f .

          git checkout develop

          sed -i 's/^version:.*/version: '${DEVELOP_VERSION}'/g' pubspec.yaml

          git add ${{ github.workspace }}
          git commit -m "[qsa-auto-release] Development version updated to ${DEVELOP_VERSION}"
          git push
          git checkout release

      - name: Update Release page
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: false
          artifacts: "build/app/outputs/apk/release/*.apk,build/app/outputs/bundle/release/app-release.aab"
          token: ${{ secrets.CICD_GITHUB_TOKEN }}
          tag: "${{ env.RELEASE_VERSION }}"
          body: ${{ inputs.message }}
      
      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: sofiqe-apk
          path: build/app/outputs/bundle/release/app-release.aab
      
      # - name: Upload IPA artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: sofiqe-ios
      #     path: bbuild/ios/ipa/*.ipa

      - name: Setup summary
        shell: bash
        run: |
          DATE_NOW=$(date +%d-%m-%Y)
          TIME_NOW=$(date +%H:%M)
          echo "Release date: ${DATE_NOW}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
          echo "Release time: ${TIME_NOW}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
          echo "Main Builder: $GITHUB_ACTOR" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
          echo "Released version: ${RELEASE_VERSION}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
          echo "Next Develop version: ${DEVELOP_VERSION}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
      
      - name: Merge code to master branch
        shell: bash
        run: |
          .github/scripts/validate_integrity_master.sh
